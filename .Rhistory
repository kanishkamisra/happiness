group_by(playerID) %>%
summarize(Hits = sum(H), AB = sum(AB)) %>%
mutate(avg = Hits/AB)
batters <- Master %>%
tbl_df() %>%
select(playerID, nameFirst, nameLast) %>%
unite(name, nameFirst, nameLast, sep = " ") %>%
inner_join(batters, by = "playerID") %>%
select(-playerID)
View(batters)
batters %>%
arrage(desc(avg)) %>%
head(5) %>%
kable()
batters %>%
arrange(desc(avg)) %>%
head(5) %>%
kable()
?kable
batters %>%
arrange(desc(avg)) %>%
head(5)
batters %>%
arrange(avg) %>%
head(5)
batting %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005)
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005)
library(ggplot2)
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005)
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005) +
theme_fivethirtyeight()
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005) +
theme_fivethirtyeight()
library(ggthemes)
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005) +
theme_fivethirtyeight()
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005) +
theme_fivethirtyeight() +
scale_color_manual(values = c("#f1c40f", "#008fd5", "#ff2700", "#77ab43", "#9b59b6"))
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg), color = "blue") +
geom_histogram(binwidth = .005) +
theme_fivethirtyeight()
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005) +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005) +
# theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005) +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005, fill = "blue") +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005, fill = "#f1c40f") +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005, fill = "#008fd5") +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005, fill = "#ff2700") +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005, fill = "#77ab43") +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005, fill = "#9b59b6") +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005, fill = "#f1c40f") +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005, fill = "#30a2da") +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005, fill = blue) +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
yellow <- "#f1c40f"
blue <- "#008fd5"
red <- "#ff2700"
green <- "#77ab43"
purple <- "#9b59b6"
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005, fill = blue) +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
blue <- "#30a2da"
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005, fill = blue) +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005, fill = red) +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
red <- "#fc4f30"
blue <- "#30a2da"
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005, fill = red) +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005, fill = green) +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
batters %>%
filter(AB >= 500) %>%
ggplot(aes(avg)) +
geom_histogram(binwidth = .005, fill = yellow) +
theme_fivethirtyeight() +
ggtitle("Distribution of Batters' Batting Averages")
library(statsr)
library(dplyr)
library(ggplot2)
library(shiny)
View(batters)
library(ggplot2)
data <- c(0, 1, 10, 50, 250)
ggplot(data) +
geom_point()
(5-1+1)/(15)
(5-2+1)/(15)
(5-3+1)/(15)
(5-4+1)/(15)
(5-5+1)/(15)
log(1)
log(2)
log10(2)
log10(1)
log10(3)
x <- c(1,2,3,4,5)
y <- c(log(x))
y
ggplot(x,y) +
geom_point()
ggplot(|) +
geom_point(x, y)
ggplot() +
geom_point(x, y)
z <- cbind(x,z)
z <- cbind(x,y)
ggplot(z) +
geom_point()
ggplot(z) +
geom_point(aes(color = x))
z
ggplot(z$x, z$y)
ggplot(z$x, z$y) +
geom_point()
z <- as.data.frame(cbind(x,y))
ggplot(z$x, z$y) +
geom_point()
ggplot(diamonds, aes(color, log10(price))) +
geom_boxplot() +
scale_y_continuous("Price, log10-scaling")
ggplot(diamonds, aes(color, log10(price))) +
geom_line() +
scale_y_continuous("Price, log10-scaling")
ggplot(z, aes(x,y)) +
geom_point()
ggplot(z, aes(x,y)) +
geom_line()
x <- c(1,10,50,250,1000)
y <- c(log(x))
z <- as.data.frame(cbind(x,y))
ggplot(z, aes(x,y)) +
geom_line()
y
x <- c(1,10,50,250,1000)
y <- c(log10(x))
z <- as.data.frame(cbind(x,y))
ggplot(z, aes(x,y)) +
geom_line()
ggplot(z, aes(x,y)) +
geom_line()
x <- c(1,10,50,250,1250)
y <- c(log10(x))
z <- as.data.frame(cbind(x,y))
ggplot(z, aes(x,y)) +
geom_line()
yellow <- "#f1c40f"
blue <- "#30a2da"
red <- "#fc4f30"
green <- "#77ab43"
purple <- "#9b59b6"
library(ggthemes)
ggplot(z, aes(x,y)) +
geom_line(color = blue)
ggplot(z, aes(x,y)) +
geom_line(color = blue, size = 1.5)
ggplot(z, aes(x,y)) +
geom_line(color = blue, size = 1.5)
ggplot(z, aes(x,y)) +
geom_line(color = blue, size = 1.5) +
geom_smooth()
ggplot(z, aes(x,y)) +
geom_point(color = blue, size = 1.5) +
geom_smooth()
ggplot(z, aes(x,y)) +
geom_point(color = blue, size = 1.5) +
geom_smooth(color = yellow)
ggplot(z, aes(x,y)) +
geom_point(color = blue, size = 2.0) +
geom_smooth(color = yellow)
ggplot(z, aes(x,y)) +
geom_point(color = blue, size = 2.0) +
geom_smooth(color = yellow, size = 1.5)
ggplot(z, aes(x,y)) +
geom_point(color = blue, size = 2.0) +
geom_smooth(color = yellow)
ggplot(z, aes(x,y)) +
geom_point(color = blue, size = 3.0) +
geom_smooth(color = yellow)
ggplot(z, aes(x,y)) +
geom_point(color = blue, size = 3.0) +
geom_smooth(color = yellow, size = 2.0)
library(ggthemes)
ggplot(z, aes(x,y)) +
geom_point(color = blue, size = 3.0) +
geom_smooth(color = yellow, size = 2.0) +
theme_fivethirtyeight()
x <- c(0,1,10,50,250,1250)
y <- c(log10(x))
y
z <- as.data.frame(cbind(x,y))
ggplot(z, aes(x,y)) +
geom_point(color = blue, size = 3.0) +
geom_smooth(color = yellow, size = 2.0) +
theme_fivethirtyeight()
x <- c(1,10,50,250,1250)
y <- c(log10(x))
z <- as.data.frame(cbind(x,y))
ggplot(z, aes(x,y)) +
geom_point(color = blue, size = 3.0) +
geom_smooth(color = yellow, size = 2.0) +
theme_fivethirtyeight()
ggplot(z, aes(x,y)) +
geom_point(color = blue, size = 3.0) +
geom_smooth(color = yellow, size = 2.0) +
theme_fivethirtyeight() +
ggtitle("At-bats vs logarithmic batting average")
ggplot(z, aes(x,y)) +
geom_point(color = blue, size = 3.0) +
geom_smooth(color = yellow, size = 2.0) +
theme_fivethirtyeight() +
ggtitle("This is a plot")
ggplot(z, aes(x,y)) +
geom_line(color = blue, size = 3.0) +
geom_smooth(color = yellow, size = 2.0) +
theme_fivethirtyeight() +
ggtitle("This is a plot")
ggplot(z, aes(x,y)) +
geom_line(color = blue, size = 2.0) +
geom_smooth(color = yellow, size = 2.0) +
theme_fivethirtyeight() +
ggtitle("This is a plot")
library(extrafont)
ggplot(z, aes(x,y)) +
geom_line(color = blue, size = 2.0) +
geom_smooth(color = yellow, size = 2.0) +
theme_fivethirtyeight() +
ggtitle("The logarithmic scale")
ggplot(z, aes(x,y)) +
geom_line(color = blue, size = 2.0) +
geom_smooth(color = yellow, size = 2.0) +
theme_fivethirtyeight() +
ggtitle("The logarithmic scale vs smooth")
ggplot(z, aes(x,y)) +
geom_line(color = blue, size = 2.0) +
geom_smooth(color = yellow, size = 2.0) +
theme_fivethirtyeight() +
ggtitle("The logarithmic scale vs smoothened")
x <- c(1,2,3,4,5)
y <- c(log10(x))
y
z <- c("Irrelevant", "Little", "Somewhat", "Very", "Mandatory")
preferences <- as.data.frame(cbind(x,y,z))
ggplot(preferences, aes(x,y)) +
geom_line(color = blue, size = 2.0) +
geom_smooth(color = yellow, size = 2.0) +
theme_fivethirtyeight() +
ggtitle("The logarithmic scale vs smoothened")
preferences
ggplot(preferences, aes(x,y)) +
geom_line(color = blue, size = 2.0) +
geom_smooth(color = yellow, size = 2.0) +
theme_fivethirtyeight() +
ggtitle("The logarithmic scale vs smoothened")
ggplot(preferences, aes(x,y)) +
geom_line(color = blue, size = 2.0) +
ggplot(preferences, aes(x,y)) +
geom_line(color = blue, size = 2.0) +
ggplot(preferences, aes(x,y)) +
geom_line(color = blue, size = 2.0)
ggplot(preferences, aes(x,y)) +
geom_line(color = blue, size = 2.0)
ggplot(preferences, aes(x,y, color = z)) +
geom_line(color = blue, size = 2.0)
preferences <- as.data.frame(cbind(x,y,z))
preferences
ggplot(preferences, aes(x,y,z)) +
geom_line(color = blue, size = 2.0)
ggplot(preferences, aes(x,y)) +
geom_line(color = blue, size = 2.0)
preferences <- as.data.frame(cbind(x,y))
preferences
ggplot(preferences, aes(x,y)) +
geom_line(color = blue, size = 2.0)
ggplot(preferences, aes(x,y)) +
geom_line(color = blue, size = 2.0) +
geom_smooth(color = yellow, size = 2.0) +
theme_fivethirtyeight() +
ggtitle("The logarithmic scale vs smoothened")
ggplot(preferences, aes(x,y)) +
geom_line(color = blue, size = 2.0) +
# geom_smooth(color = yellow, size = 2.0) +
theme_fivethirtyeight() +
ggtitle("The logarithmic scale vs smoothened")
x <- c(1,2,3,4,5)
y <- c(log(x)/(1+log(x)))
preferences <- as.data.frame(cbind(x,y))
preferences
ggplot(preferences, aes(x,y)) +
geom_line(color = blue, size = 2.0) +
# geom_smooth(color = yellow, size = 2.0) +
theme_fivethirtyeight() +
ggtitle("The logarithmic scale vs smoothened")
ggplot(preferences, aes(x,y)) +
geom_line(color = blue, size = 2.0) +
# geom_smooth(color = yellow, size = 2.0) +
theme_fivethirtyeight() +
ggtitle("The logarithmic scale vs smoothened")
ggplot(preferences, aes(x,y)) +
geom_line(color = blue, size = 2.0) +
# geom_smooth(color = yellow, size = 2.0) +
theme_fivethirtyeight() +
ggtitle("The logarithmic scale vs smoothened")
ggplot(preferences, aes(x,y)) +
geom_line(color = blue, size = 2.0) +
theme_fivethirtyeight() +
ggtitle("The logarithmic scale vs smoothened")
ggplot(preferences, aes(x,y)) +
geom_line(color = red, size = 2.0) +
theme_fivethirtyeight() +
ggtitle("The logarithmic scale vs smoothened")
ggplot(preferences, aes(x,y)) +
geom_point(color = blue)
ggplot(preferences, aes(x,y)) +
geom_point(color = blue)+
geom_line(color = red, size = 2.0) +
theme_fivethirtyeight() +
ggtitle("The logarithmic scale vs smoothened")
ggplot(preferences, aes(x,y)) +
geom_point(color = blue, size = 3.0)+
geom_line(color = red, size = 2.0) +
theme_fivethirtyeight() +
ggtitle("The logarithmic scale vs smoothened")
ggplot(preferences, aes(x,y)) +
geom_point(color = blue, size = 3.0)+
geom_line(color = red, size = 2.0) +
theme_fivethirtyeight() +
ggtitle("The logarithmic scale vs smoothened")
ggplot(preferences, aes(x,y)) +
geom_point(color = blue, size = 4.0)+
geom_line(color = red, size = 2.0) +
theme_fivethirtyeight() +
ggtitle("The logarithmic scale vs smoothened")
ggplot(preferences, aes(x,y)) +
geom_point(color = blue, size = 3.0)+
geom_line(color = red, size = 2.0) +
theme_fivethirtyeight() +
ggtitle("The logarithmic scale vs smoothened")
install.packages("prophet")
dir()
library(dplyr)
library(ggplot2)
library(gapminder)
library(lubridate)
library(gganimate)
library(ggthemes)
library(plyr)
library(dplyr)
library(ggplot2)
library(gapminder)
library(lubridate)
library(gganimate)
library(ggthemes)
setwd("C:/Users/Kanishka/happiness/")
library(tidyverse)
library(kani)
library(extrafont)
library(twidlr)
library(broom)
happiness_2015 <- read.csv("data/2015.csv") %>% mutate(year = "2015")
happiness_2016 <- read.csv("data/2016.csv") %>% mutate(year = "2016")
View(happiness_2016)
View(happiness_2016)
View(happiness_2015)
library(xlsx)
read.xlsx("data/2017_data.xlsx", sheetIndex = 3)
happiness_2017 <- read.xlsx("data/2017_data.xlsx", sheetIndex = 3)
View(happiness_2017)
happiness_2017 <- read.xlsx("data/2017_data.xlsx", sheetIndex = 3)[,-2]
View(happiness_2017)
happiness_2017 <- read.xlsx("data/2017_data.xlsx", sheetIndex = 3)
happiness_2017 <- happiness_2017 %>%
select(-c(NA., NA..1))
happiness_2017 %>% colnames()
happiness_2017 %>% colnames()[1]
colnames(happiness_2017)
colnames(happiness_2016)
colnames(happiness_2015)
colnames(happiness_2017)[6]
colnames(happiness_2017)[5] <- "Economy..GDP.per.Capita."
colnames(happiness_2017)[6] <- "Family"
colnames(happiness_2017)[7] <- "Health..Life.Expectancy."
colnames(happiness_2017)[8] <- "Freedom"
colnames(happiness_2017)[9] <- "Generosity"
colnames(happiness_2017)[10] <- "Trust..Government.Corruption."
colnames(happiness_2017)[11] <- "Dystopia.Residual"
happiness_2017 %>% rank()
happiness_2017 %>% rank(Happiness.score)
colnames(happiness_2016)
happiness_2017 %>% mutate(Happiness.Rank = row_number())
colnames(happiness_2017)
colnames(happiness_2017)[2]
colnames(happiness_2016)
colnames(happiness_2017)[2] <- "Happiness.Score"
happiness_2017 <- happiness_2017 %>% mutate(Happiness.Rank = row_number()) %>%
select(Country, Happiness.Rank, Happiness.score, Whisker.high:Dystopia.Residual)
happiness_2017 <- happiness_2017 %>% mutate(Happiness.Rank = row_number()) %>%
select(Country, Happiness.Rank, Happiness.Score, Whisker.high:Dystopia.Residual)
write.csv(happiness_2017, "2017.csv", row.names = F)
happiness_2017 <- happiness_2017 %>%
mutate(kanis_score = sum(Economy..GDP.per.Capita., Family, Health..Life.Expectancy., Freedom, Generosity, Trust..Government.Corruption., Dystopia.Residual))
test <- happiness_2017 %>%
mutate(kanis_score = sum(Economy..GDP.per.Capita., Family, Health..Life.Expectancy., Freedom, Generosity, Trust..Government.Corruption., Dystopia.Residual)) %>%
select(Country, Happiness.Rank, Happiness.Score, kanis_score)
View(test)
test <- happiness_2017 %>%
mutate(kanis_score = Economy..GDP.per.Capita. + Family + Health..Life.Expectancy. + Freedom + Generosity + Trust..Government.Corruption. + Dystopia.Residual) %>%
select(Country, Happiness.Rank, Happiness.Score, kanis_score)
